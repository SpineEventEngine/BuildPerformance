/*
* Copyright 2023, TeamDev. All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Redistribution and use in source and/or binary forms, with or without
* modification, must retain the above copyright notice and the following
* disclaimer.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

@file:Suppress("UnstableApiUsage")

/**
 * This version of `settings.gradle.kts` is used when `BuildPerformance` is build in a CI job.
 *
 * The version of Spine dependencies must be supplied as environment variables:
 *  - `MC_JAVA_VERSION` - the version of the McJava plugin;
 *  - `PROTO_DATA_VERSION` - the version of the ProtoData;
 *  - `VALIDATION_VERSION` - the version of the Validation extension of ProtoData.
 *
 * See `settings.gradle.kts` for the version of the file used for local builds.
 */

dependencyResolutionManagement {
    versionCatalogs {
        create("spine") {
            val mcJava = version("mcJava", "$MC_JAVA_VERSION")
            val protoData = version("protoData", "$PROTO_DATA_VERSION")
            val validation = version("validation", "$VALIDATION_VERSION")

            library(
                "mcJava",
                "io.spine.tools", "spine-mc-java-plugins"
            ).versionRef(mcJava)

            library(
                "validation.runtime",
                "io.spine.validation", "spine-validation-java-runtime"
            ).versionRef(protoData)

            library(
                "protodata.plugin",
                "io.spine.validation", "spine-validation-java-runtime"
            ).versionRef(validation)
        }
    }
}
